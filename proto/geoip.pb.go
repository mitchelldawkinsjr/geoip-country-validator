// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/geoip.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for checking country
type CheckCountryRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IpAddress        string                 `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	AllowedCountries []string               `protobuf:"bytes,2,rep,name=allowed_countries,json=allowedCountries,proto3" json:"allowed_countries,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CheckCountryRequest) Reset() {
	*x = CheckCountryRequest{}
	mi := &file_proto_geoip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckCountryRequest) ProtoMessage() {}

func (x *CheckCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geoip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckCountryRequest.ProtoReflect.Descriptor instead.
func (*CheckCountryRequest) Descriptor() ([]byte, []int) {
	return file_proto_geoip_proto_rawDescGZIP(), []int{0}
}

func (x *CheckCountryRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *CheckCountryRequest) GetAllowedCountries() []string {
	if x != nil {
		return x.AllowedCountries
	}
	return nil
}

// Response message for country check
type CheckCountryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Country       string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckCountryResponse) Reset() {
	*x = CheckCountryResponse{}
	mi := &file_proto_geoip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckCountryResponse) ProtoMessage() {}

func (x *CheckCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geoip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckCountryResponse.ProtoReflect.Descriptor instead.
func (*CheckCountryResponse) Descriptor() ([]byte, []int) {
	return file_proto_geoip_proto_rawDescGZIP(), []int{1}
}

func (x *CheckCountryResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *CheckCountryResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

// Health check request
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_geoip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geoip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_geoip_proto_rawDescGZIP(), []int{2}
}

// Health check response
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_geoip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geoip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_geoip_proto_rawDescGZIP(), []int{3}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

var File_proto_geoip_proto protoreflect.FileDescriptor

const file_proto_geoip_proto_rawDesc = "" +
	"\n" +
	"\x11proto/geoip.proto\x12\x05geoip\"a\n" +
	"\x13CheckCountryRequest\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x01 \x01(\tR\tipAddress\x12+\n" +
	"\x11allowed_countries\x18\x02 \x03(\tR\x10allowedCountries\"J\n" +
	"\x14CheckCountryResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\"\x0f\n" +
	"\rHealthRequest\"B\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice2\x8e\x01\n" +
	"\fGeoIPService\x12G\n" +
	"\fCheckCountry\x12\x1a.geoip.CheckCountryRequest\x1a\x1b.geoip.CheckCountryResponse\x125\n" +
	"\x06Health\x12\x14.geoip.HealthRequest\x1a\x15.geoip.HealthResponseB\x15Z\x13geoip-service/protob\x06proto3"

var (
	file_proto_geoip_proto_rawDescOnce sync.Once
	file_proto_geoip_proto_rawDescData []byte
)

func file_proto_geoip_proto_rawDescGZIP() []byte {
	file_proto_geoip_proto_rawDescOnce.Do(func() {
		file_proto_geoip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_geoip_proto_rawDesc), len(file_proto_geoip_proto_rawDesc)))
	})
	return file_proto_geoip_proto_rawDescData
}

var file_proto_geoip_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_geoip_proto_goTypes = []any{
	(*CheckCountryRequest)(nil),  // 0: geoip.CheckCountryRequest
	(*CheckCountryResponse)(nil), // 1: geoip.CheckCountryResponse
	(*HealthRequest)(nil),        // 2: geoip.HealthRequest
	(*HealthResponse)(nil),       // 3: geoip.HealthResponse
}
var file_proto_geoip_proto_depIdxs = []int32{
	0, // 0: geoip.GeoIPService.CheckCountry:input_type -> geoip.CheckCountryRequest
	2, // 1: geoip.GeoIPService.Health:input_type -> geoip.HealthRequest
	1, // 2: geoip.GeoIPService.CheckCountry:output_type -> geoip.CheckCountryResponse
	3, // 3: geoip.GeoIPService.Health:output_type -> geoip.HealthResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_geoip_proto_init() }
func file_proto_geoip_proto_init() {
	if File_proto_geoip_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_geoip_proto_rawDesc), len(file_proto_geoip_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_geoip_proto_goTypes,
		DependencyIndexes: file_proto_geoip_proto_depIdxs,
		MessageInfos:      file_proto_geoip_proto_msgTypes,
	}.Build()
	File_proto_geoip_proto = out.File
	file_proto_geoip_proto_goTypes = nil
	file_proto_geoip_proto_depIdxs = nil
}
